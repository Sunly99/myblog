<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <context id="myblog" targetRuntime="MyBatis3">
        <!-- 数据库关键字冲突,自动处理 -->
        <property name="autoDelimitKeywords" value="true"/>

        <!-- 用反引号`包裹,默认是双引号"-->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 注释 -->
        <commentGenerator>
            <!-- 是否不生成注释 -->
            <property name="suppressAllComments" value="false"/>
            <!-- 添加 db 表中字段的注释，只有suppressAllComments为false时才生效-->
            <property name="addRemarkComments" value="true"/>
            <!-- 不希望生成的注释中包含时间戳 -->
            <property name="suppressDate" value="true"/>
        </commentGenerator>

        <!-- 数据库连接信息 -->
        <jdbcConnection
                driverClass="com.mysql.cj.jdbc.Driver"
                connectionURL="jdbc:mysql://localhost:3306/myblog?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=UTF-8"
                userId="root"
                password="Szz18005800918">
            <!--高版本的 mysql-connector-java 需要设置 nullCatalogMeansCurrent=true-->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!--是否使用bigDecimal，默认false。
                false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
                true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal-->
            <property name="forceBigDecimals" value="false"/>
            <!--默认false
                false，将所有 JDBC 的时间类型解析为 java.util.Date
                true，将 JDBC 的时间类型按如下规则解析
                    DATE	                -> java.time.LocalDate
                    TIME	                -> java.time.LocalTime
                    TIMESTAMP               -> java.time.LocalDateTime
                    TIME_WITH_TIMEZONE  	-> java.time.OffsetTime
                    TIMESTAMP_WITH_TIMEZONE	-> java.time.OffsetDateTime
                -->
            <property name="useJSR310Types" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体类地址 -->
        <javaModelGenerator
                targetPackage="myblog.pojo.po"
                targetProject="./src/main/java">
            <!-- 是否让 schema 作为包的后缀，默认为false -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否针对string类型的字段在set方法中进行修剪，默认false -->
            <property name="trimStrings" value="false"/>
        </javaModelGenerator>

        <!-- 生成Mapper.xml文件 -->
        <sqlMapGenerator
                targetPackage="mapping"
                targetProject="./src/main/resources">
            <!-- 是否让 schema 作为包的后缀，默认为false -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 生成 XxxMapper.java 接口-->
        <javaClientGenerator
                type="XMLMAPPER"
                targetPackage="myblog.pojo.mapper"
                targetProject="./src/main/java">
            <!-- 是否让 schema 作为包的后缀，默认为false -->
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- schema为数据库名，oracle需要配置，mysql不需要配置。
                     tableName为对应的数据库表名
                     domainObjectName 是要生成的实体类名(可以不指定，默认按帕斯卡命名法将表名转换成类名)
                     enableXXXByExample 默认为 true， 为 true 会生成一个对应Example帮助类，帮助你进行条件查询，不想要可以设为false
                     -->

        <table tableName="t_blog" domainObjectName="Blog"/>
        <table tableName="t_comment" domainObjectName="Comment"/>
        <table tableName="t_friend" domainObjectName="FriendLink"/>
        <table tableName="t_message" domainObjectName="Message"/>
        <table tableName="t_picture" domainObjectName="Picture"/>
        <table tableName="t_type" domainObjectName="Type"/>
        <table tableName="t_user" domainObjectName="User"/>

    </context>
</generatorConfiguration>